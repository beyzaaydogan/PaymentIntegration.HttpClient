{
  "openapi": "3.0.0",
  "info": {
    "title": "Balance Management API",
    "version": "1.0.0",
    "description": "API for managing user balance, pre-orders, and order completion",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "https://balance-management-pi44.onrender.com",
      "description": "API Server"
    }
  ],
  "components": {
    "schemas": {
      "Balance": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique identifier for the user"
          },
          "totalBalance": {
            "type": "number",
            "description": "Total balance amount"
          },
          "availableBalance": {
            "type": "number",
            "description": "Available balance that can be used"
          },
          "blockedBalance": {
            "type": "number",
            "description": "Balance amount that is blocked for pending orders"
          },
          "currency": {
            "type": "string",
            "description": "Currency code (e.g., USD)"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the last balance update"
          }
        }
      },
      "PreOrder": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Unique identifier for the order"
          },
          "amount": {
            "type": "number",
            "description": "Amount to be blocked for the pre-order"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the pre-order was created"
          },
          "status": {
            "type": "string",
            "enum": [
              "blocked",
              "completed",
              "cancelled"
            ],
            "description": "Current status of the pre-order"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the order was completed (only present for completed orders)"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the order was cancelled (only present for cancelled orders)"
          }
        },
        "required": [
          "orderId",
          "amount"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error type"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the product"
          },
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product"
          },
          "price": {
            "type": "number",
            "description": "Price of the product"
          },
          "currency": {
            "type": "string",
            "description": "Currency code (e.g., USD)"
          },
          "category": {
            "type": "string",
            "description": "Product category"
          },
          "stock": {
            "type": "integer",
            "description": "Number of units available in stock"
          }
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Welcome message",
        "description": "Returns a welcome message for the API",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/balance": {
      "get": {
        "summary": "Get user balance",
        "description": "Retrieves the current balance information for the user",
        "responses": {
          "200": {
            "description": "Balance information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Balance"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/balance/preorder": {
      "post": {
        "summary": "Create a pre-order",
        "description": "Creates a pre-order and blocks the specified amount from the available balance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "orderId"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount to block for the pre-order"
                  },
                  "orderId": {
                    "type": "string",
                    "description": "Unique identifier for the order"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pre-order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "preOrder": {
                          "$ref": "#/components/schemas/PreOrder"
                        },
                        "updatedBalance": {
                          "$ref": "#/components/schemas/Balance"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/balance/complete": {
      "post": {
        "summary": "Complete an order",
        "description": "Completes a pre-order by deducting the blocked amount from the total balance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderId"
                ],
                "properties": {
                  "orderId": {
                    "type": "string",
                    "description": "Unique identifier for the order to complete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/PreOrder"
                        },
                        "updatedBalance": {
                          "$ref": "#/components/schemas/Balance"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Pre-order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/balance/cancel": {
      "post": {
        "summary": "Cancel a pre-order",
        "description": "Cancels a pre-order and returns the blocked amount to the available balance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderId"
                ],
                "properties": {
                  "orderId": {
                    "type": "string",
                    "description": "Unique identifier for the order to cancel"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pre-order cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/PreOrder"
                        },
                        "updatedBalance": {
                          "$ref": "#/components/schemas/Balance"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Pre-order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "Get products and prices",
        "description": "Retrieves a list of all available products with their prices",
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}